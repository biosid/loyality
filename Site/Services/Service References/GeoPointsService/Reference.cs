//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vtb24.Site.Services.GeoPointsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBase", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.OutputResults")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vtb24.Site.Services.GeoPointsService.CheckKladrCodeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vtb24.Site.Services.GeoPointsService.CountryListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vtb24.Site.Services.GeoPointsService.GetLocationsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vtb24.Site.Services.GeoPointsService.KladrAddressResult))]
    internal partial class ResultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResultDescription {
            get {
                return this.ResultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDescriptionField, value) != true)) {
                    this.ResultDescriptionField = value;
                    this.RaisePropertyChanged("ResultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckKladrCodeResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.OutputResults")]
    [System.SerializableAttribute()]
    internal partial class CheckKladrCodeResult : Vtb24.Site.Services.GeoPointsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ExistKladrCodesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] ExistKladrCodes {
            get {
                return this.ExistKladrCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExistKladrCodesField, value) != true)) {
                    this.ExistKladrCodesField = value;
                    this.RaisePropertyChanged("ExistKladrCodes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryListResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.OutputResults")]
    [System.SerializableAttribute()]
    internal partial class CountryListResult : Vtb24.Site.Services.GeoPointsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.Country[] CountriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.Country[] Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLocationsResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.OutputResults")]
    [System.SerializableAttribute()]
    internal partial class GetLocationsResult : Vtb24.Site.Services.GeoPointsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.Location[] LocationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.Location[] Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KladrAddressResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.OutputResults")]
    [System.SerializableAttribute()]
    internal partial class KladrAddressResult : Vtb24.Site.Services.GeoPointsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.KladrAddress KladrAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.KladrAddress KladrAddress {
            get {
                return this.KladrAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.KladrAddressField, value) != true)) {
                    this.KladrAddressField = value;
                    this.RaisePropertyChanged("KladrAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KladrAddress", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Kladr.Model")]
    [System.SerializableAttribute()]
    internal partial class KladrAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.AddressLevel AddressLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.AddressElement CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.AddressElement DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.AddressElement RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.AddressElement TownField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.AddressLevel AddressLevel {
            get {
                return this.AddressLevelField;
            }
            set {
                if ((this.AddressLevelField.Equals(value) != true)) {
                    this.AddressLevelField = value;
                    this.RaisePropertyChanged("AddressLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.AddressElement City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.AddressElement District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FullText {
            get {
                return this.FullTextField;
            }
            set {
                if ((object.ReferenceEquals(this.FullTextField, value) != true)) {
                    this.FullTextField = value;
                    this.RaisePropertyChanged("FullText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.AddressElement Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.AddressElement Town {
            get {
                return this.TownField;
            }
            set {
                if ((object.ReferenceEquals(this.TownField, value) != true)) {
                    this.TownField = value;
                    this.RaisePropertyChanged("Town");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.Entities")]
    [System.SerializableAttribute()]
    internal partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Alpha2CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Alpha3CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Alpha2Code {
            get {
                return this.Alpha2CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Alpha2CodeField, value) != true)) {
                    this.Alpha2CodeField = value;
                    this.RaisePropertyChanged("Alpha2Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Alpha3Code {
            get {
                return this.Alpha3CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Alpha3CodeField, value) != true)) {
                    this.Alpha3CodeField = value;
                    this.RaisePropertyChanged("Alpha3Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int NumberCode {
            get {
                return this.NumberCodeField;
            }
            set {
                if ((this.NumberCodeField.Equals(value) != true)) {
                    this.NumberCodeField = value;
                    this.RaisePropertyChanged("NumberCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vtb24.Site.Services.GeoPointsService.ServicePoint))]
    internal partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityKladrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityToponymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DistrictIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictKladrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictToponymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KladrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionKladrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionToponymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToponymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TownIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownKladrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownToponymField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CityKladrCode {
            get {
                return this.CityKladrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityKladrCodeField, value) != true)) {
                    this.CityKladrCodeField = value;
                    this.RaisePropertyChanged("CityKladrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CityToponym {
            get {
                return this.CityToponymField;
            }
            set {
                if ((object.ReferenceEquals(this.CityToponymField, value) != true)) {
                    this.CityToponymField = value;
                    this.RaisePropertyChanged("CityToponym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> DistrictId {
            get {
                return this.DistrictIdField;
            }
            set {
                if ((this.DistrictIdField.Equals(value) != true)) {
                    this.DistrictIdField = value;
                    this.RaisePropertyChanged("DistrictId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DistrictKladrCode {
            get {
                return this.DistrictKladrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictKladrCodeField, value) != true)) {
                    this.DistrictKladrCodeField = value;
                    this.RaisePropertyChanged("DistrictKladrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DistrictToponym {
            get {
                return this.DistrictToponymField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictToponymField, value) != true)) {
                    this.DistrictToponymField = value;
                    this.RaisePropertyChanged("DistrictToponym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Index {
            get {
                return this.IndexField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexField, value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string KladrCode {
            get {
                return this.KladrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KladrCodeField, value) != true)) {
                    this.KladrCodeField = value;
                    this.RaisePropertyChanged("KladrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int LocationType {
            get {
                return this.LocationTypeField;
            }
            set {
                if ((this.LocationTypeField.Equals(value) != true)) {
                    this.LocationTypeField = value;
                    this.RaisePropertyChanged("LocationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RegionKladrCode {
            get {
                return this.RegionKladrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionKladrCodeField, value) != true)) {
                    this.RegionKladrCodeField = value;
                    this.RaisePropertyChanged("RegionKladrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RegionToponym {
            get {
                return this.RegionToponymField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionToponymField, value) != true)) {
                    this.RegionToponymField = value;
                    this.RaisePropertyChanged("RegionToponym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Toponym {
            get {
                return this.ToponymField;
            }
            set {
                if ((object.ReferenceEquals(this.ToponymField, value) != true)) {
                    this.ToponymField = value;
                    this.RaisePropertyChanged("Toponym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> TownId {
            get {
                return this.TownIdField;
            }
            set {
                if ((this.TownIdField.Equals(value) != true)) {
                    this.TownIdField = value;
                    this.RaisePropertyChanged("TownId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TownKladrCode {
            get {
                return this.TownKladrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TownKladrCodeField, value) != true)) {
                    this.TownKladrCodeField = value;
                    this.RaisePropertyChanged("TownKladrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TownName {
            get {
                return this.TownNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TownNameField, value) != true)) {
                    this.TownNameField = value;
                    this.RaisePropertyChanged("TownName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TownToponym {
            get {
                return this.TownToponymField;
            }
            set {
                if ((object.ReferenceEquals(this.TownToponymField, value) != true)) {
                    this.TownToponymField = value;
                    this.RaisePropertyChanged("TownToponym");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicePoint", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.GeoPoints.Entities")]
    [System.SerializableAttribute()]
    internal partial class ServicePoint : Vtb24.Site.Services.GeoPointsService.Location {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstantTransferSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxSummaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnaddressedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string InstantTransferSystem {
            get {
                return this.InstantTransferSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.InstantTransferSystemField, value) != true)) {
                    this.InstantTransferSystemField = value;
                    this.RaisePropertyChanged("InstantTransferSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MaxSumma {
            get {
                return this.MaxSummaField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSummaField, value) != true)) {
                    this.MaxSummaField = value;
                    this.RaisePropertyChanged("MaxSumma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Summa {
            get {
                return this.SummaField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaField, value) != true)) {
                    this.SummaField = value;
                    this.RaisePropertyChanged("Summa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> Unaddressed {
            get {
                return this.UnaddressedField;
            }
            set {
                if ((this.UnaddressedField.Equals(value) != true)) {
                    this.UnaddressedField = value;
                    this.RaisePropertyChanged("Unaddressed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressElement", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Kladr.Model")]
    [System.SerializableAttribute()]
    internal partial class AddressElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vtb24.Site.Services.GeoPointsService.AddressLevel LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Vtb24.Site.Services.GeoPointsService.AddressLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressLevel", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Kladr.Model")]
    internal enum AddressLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        District = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Town = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Street = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        House = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flat = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Version", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    internal partial class Version : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _BuildField;
        
        private int _MajorField;
        
        private int _MinorField;
        
        private int _RevisionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal int _Build {
            get {
                return this._BuildField;
            }
            set {
                if ((this._BuildField.Equals(value) != true)) {
                    this._BuildField = value;
                    this.RaisePropertyChanged("_Build");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal int _Major {
            get {
                return this._MajorField;
            }
            set {
                if ((this._MajorField.Equals(value) != true)) {
                    this._MajorField = value;
                    this.RaisePropertyChanged("_Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal int _Minor {
            get {
                return this._MinorField;
            }
            set {
                if ((this._MinorField.Equals(value) != true)) {
                    this._MinorField = value;
                    this.RaisePropertyChanged("_Minor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal int _Revision {
            get {
                return this._RevisionField;
            }
            set {
                if ((this._RevisionField.Equals(value) != true)) {
                    this._RevisionField = value;
                    this.RaisePropertyChanged("_Revision");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GeoPointsService.IGeoPointService")]
    internal interface IGeoPointService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupportService/Echo", ReplyAction="http://tempuri.org/ISupportService/EchoResponse")]
        string Echo(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupportService/Echo", ReplyAction="http://tempuri.org/ISupportService/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetAddressByKladrCode", ReplyAction="http://tempuri.org/IGeoPointService/GetAddressByKladrCodeResponse")]
        Vtb24.Site.Services.GeoPointsService.KladrAddressResult GetAddressByKladrCode(string KladrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetAddressByKladrCode", ReplyAction="http://tempuri.org/IGeoPointService/GetAddressByKladrCodeResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.KladrAddressResult> GetAddressByKladrCodeAsync(string KladrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetExistKladrCodes", ReplyAction="http://tempuri.org/IGeoPointService/GetExistKladrCodesResponse")]
        Vtb24.Site.Services.GeoPointsService.CheckKladrCodeResult GetExistKladrCodes(string[] KladrCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetExistKladrCodes", ReplyAction="http://tempuri.org/IGeoPointService/GetExistKladrCodesResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.CheckKladrCodeResult> GetExistKladrCodesAsync(string[] KladrCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetCountriesNamesByCode", ReplyAction="http://tempuri.org/IGeoPointService/GetCountriesNamesByCodeResponse")]
        Vtb24.Site.Services.GeoPointsService.CountryListResult GetCountriesNamesByCode(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetCountriesNamesByCode", ReplyAction="http://tempuri.org/IGeoPointService/GetCountriesNamesByCodeResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.CountryListResult> GetCountriesNamesByCodeAsync(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetCountries", ReplyAction="http://tempuri.org/IGeoPointService/GetCountriesResponse")]
        Vtb24.Site.Services.GeoPointsService.Location[] GetCountries(string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetCountries", ReplyAction="http://tempuri.org/IGeoPointService/GetCountriesResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location[]> GetCountriesAsync(string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationsByParent", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationsByParentResponse")]
        Vtb24.Site.Services.GeoPointsService.Location[] GetLocationsByParent(System.Guid ParentId, System.Nullable<int> LocationType, string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationsByParent", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationsByParentResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location[]> GetLocationsByParentAsync(System.Guid ParentId, System.Nullable<int> LocationType, string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationsByIP", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationsByIPResponse")]
        Vtb24.Site.Services.GeoPointsService.Location[] GetLocationsByIP(string IP, int LocationType, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationsByIP", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationsByIPResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location[]> GetLocationsByIPAsync(string IP, int LocationType, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByIP", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByIPResponse")]
        Vtb24.Site.Services.GeoPointsService.Location GetLocationByIP(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByIP", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByIPResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByIPAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationById", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByIdResponse")]
        Vtb24.Site.Services.GeoPointsService.Location GetLocationById(System.Guid Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationById", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByIdResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByIdAsync(System.Guid Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByExternalId", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByExternalIdResponse")]
        Vtb24.Site.Services.GeoPointsService.Location GetLocationByExternalId(string ExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByExternalId", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByExternalIdResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByExternalIdAsync(string ExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByKladrCode", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByKladrCodeResponse")]
        Vtb24.Site.Services.GeoPointsService.Location GetLocationByKladrCode(string KladrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByKladrCode", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByKladrCodeResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByKladrCodeAsync(string KladrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationsByKladrCode", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationsByKladrCodeResponse")]
        Vtb24.Site.Services.GeoPointsService.GetLocationsResult GetLocationsByKladrCode(string ParentKladrCode, int[] LocationType, string[] Toponyms, string NameSearchPattern, System.Nullable<bool> RegionIsCityOnly, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationsByKladrCode", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationsByKladrCodeResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.GetLocationsResult> GetLocationsByKladrCodeAsync(string ParentKladrCode, int[] LocationType, string[] Toponyms, string NameSearchPattern, System.Nullable<bool> RegionIsCityOnly, System.Nullable<int> Skip, System.Nullable<int> Top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByCoordinates", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByCoordinatesResponse")]
        Vtb24.Site.Services.GeoPointsService.Location GetLocationByCoordinates(string GeoSystem, System.Nullable<int> LocationType, System.Nullable<int> Radius, decimal Lat, decimal Lng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetLocationByCoordinates", ReplyAction="http://tempuri.org/IGeoPointService/GetLocationByCoordinatesResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByCoordinatesAsync(string GeoSystem, System.Nullable<int> LocationType, System.Nullable<int> Radius, decimal Lat, decimal Lng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetServiceVersion", ReplyAction="http://tempuri.org/IGeoPointService/GetServiceVersionResponse")]
        Vtb24.Site.Services.GeoPointsService.Version GetServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoPointService/GetServiceVersion", ReplyAction="http://tempuri.org/IGeoPointService/GetServiceVersionResponse")]
        System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Version> GetServiceVersionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IGeoPointServiceChannel : Vtb24.Site.Services.GeoPointsService.IGeoPointService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GeoPointServiceClient : System.ServiceModel.ClientBase<Vtb24.Site.Services.GeoPointsService.IGeoPointService>, Vtb24.Site.Services.GeoPointsService.IGeoPointService {
        
        public GeoPointServiceClient() {
        }
        
        public GeoPointServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeoPointServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoPointServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoPointServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Echo(string message) {
            return base.Channel.Echo(message);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string message) {
            return base.Channel.EchoAsync(message);
        }
        
        public Vtb24.Site.Services.GeoPointsService.KladrAddressResult GetAddressByKladrCode(string KladrCode) {
            return base.Channel.GetAddressByKladrCode(KladrCode);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.KladrAddressResult> GetAddressByKladrCodeAsync(string KladrCode) {
            return base.Channel.GetAddressByKladrCodeAsync(KladrCode);
        }
        
        public Vtb24.Site.Services.GeoPointsService.CheckKladrCodeResult GetExistKladrCodes(string[] KladrCodes) {
            return base.Channel.GetExistKladrCodes(KladrCodes);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.CheckKladrCodeResult> GetExistKladrCodesAsync(string[] KladrCodes) {
            return base.Channel.GetExistKladrCodesAsync(KladrCodes);
        }
        
        public Vtb24.Site.Services.GeoPointsService.CountryListResult GetCountriesNamesByCode(string[] codes) {
            return base.Channel.GetCountriesNamesByCode(codes);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.CountryListResult> GetCountriesNamesByCodeAsync(string[] codes) {
            return base.Channel.GetCountriesNamesByCodeAsync(codes);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location[] GetCountries(string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetCountries(NameSearchPattern, Skip, Top);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location[]> GetCountriesAsync(string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetCountriesAsync(NameSearchPattern, Skip, Top);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location[] GetLocationsByParent(System.Guid ParentId, System.Nullable<int> LocationType, string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetLocationsByParent(ParentId, LocationType, NameSearchPattern, Skip, Top);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location[]> GetLocationsByParentAsync(System.Guid ParentId, System.Nullable<int> LocationType, string NameSearchPattern, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetLocationsByParentAsync(ParentId, LocationType, NameSearchPattern, Skip, Top);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location[] GetLocationsByIP(string IP, int LocationType, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetLocationsByIP(IP, LocationType, Skip, Top);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location[]> GetLocationsByIPAsync(string IP, int LocationType, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetLocationsByIPAsync(IP, LocationType, Skip, Top);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location GetLocationByIP(string IP) {
            return base.Channel.GetLocationByIP(IP);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByIPAsync(string IP) {
            return base.Channel.GetLocationByIPAsync(IP);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location GetLocationById(System.Guid Id) {
            return base.Channel.GetLocationById(Id);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByIdAsync(System.Guid Id) {
            return base.Channel.GetLocationByIdAsync(Id);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location GetLocationByExternalId(string ExternalId) {
            return base.Channel.GetLocationByExternalId(ExternalId);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByExternalIdAsync(string ExternalId) {
            return base.Channel.GetLocationByExternalIdAsync(ExternalId);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location GetLocationByKladrCode(string KladrCode) {
            return base.Channel.GetLocationByKladrCode(KladrCode);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByKladrCodeAsync(string KladrCode) {
            return base.Channel.GetLocationByKladrCodeAsync(KladrCode);
        }
        
        public Vtb24.Site.Services.GeoPointsService.GetLocationsResult GetLocationsByKladrCode(string ParentKladrCode, int[] LocationType, string[] Toponyms, string NameSearchPattern, System.Nullable<bool> RegionIsCityOnly, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetLocationsByKladrCode(ParentKladrCode, LocationType, Toponyms, NameSearchPattern, RegionIsCityOnly, Skip, Top);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.GetLocationsResult> GetLocationsByKladrCodeAsync(string ParentKladrCode, int[] LocationType, string[] Toponyms, string NameSearchPattern, System.Nullable<bool> RegionIsCityOnly, System.Nullable<int> Skip, System.Nullable<int> Top) {
            return base.Channel.GetLocationsByKladrCodeAsync(ParentKladrCode, LocationType, Toponyms, NameSearchPattern, RegionIsCityOnly, Skip, Top);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Location GetLocationByCoordinates(string GeoSystem, System.Nullable<int> LocationType, System.Nullable<int> Radius, decimal Lat, decimal Lng) {
            return base.Channel.GetLocationByCoordinates(GeoSystem, LocationType, Radius, Lat, Lng);
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Location> GetLocationByCoordinatesAsync(string GeoSystem, System.Nullable<int> LocationType, System.Nullable<int> Radius, decimal Lat, decimal Lng) {
            return base.Channel.GetLocationByCoordinatesAsync(GeoSystem, LocationType, Radius, Lat, Lng);
        }
        
        public Vtb24.Site.Services.GeoPointsService.Version GetServiceVersion() {
            return base.Channel.GetServiceVersion();
        }
        
        public System.Threading.Tasks.Task<Vtb24.Site.Services.GeoPointsService.Version> GetServiceVersionAsync() {
            return base.Channel.GetServiceVersionAsync();
        }
    }
}
