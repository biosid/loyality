@using Rapidsoft.VTB24.Reports.Etl.EtlFiles.Models
@using Rapidsoft.VTB24.Reports.Etl.EtlReports.Models
@model Report<RequestWithTwoRepliesReportItem>
@{
    Layout = "~/Views/InteractionReports/_LayoutPrint.cshtml";
    ViewBag.Title = Html.DescriptionFor(Model.Request.Type);
}
<table style="border: 1px solid black; border-collapse: collapse;">
    <thead>
        <tr>
            @FileHeaderItem("Исходный файл", "Коллекция", true)
            @FileHeaderItem("Ответный файл", "Террадата", false)
            @FileHeaderItem("Файл с результатами", "Коллекция", true)
        </tr>
        <tr>
            @FileHeader2Item(true)
            @FileHeader2Item(false)
            @FileHeader2Item(true)
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                @FileItem(item.Request, true, false)
                @if (item.BankReply != null)
                {
                    @FileItem(item.BankReply, false, item.HasBankRowCountDiscrepancy)
                    @(item.LoyaltyReply != null ? FileItem(item.LoyaltyReply, true, item.HasLoyaltyRowCountDiscrepancy) : NoFileItem(true, item.IsLoyaltyReplyDelayed))
                }
                else
                {
                    @NoFileItem(false, item.IsBankReplyDelayed)
                    <td colspan="4"></td>
                }
            </tr>
        }
    </tbody>
</table>
@helper FileHeaderItem(string caption, string side, bool withSize)
{
    <th colspan="@(withSize ? 4 : 3)" style="text-align:center;border: 1px solid black;background-color: ghostwhite;">@caption<br/>@side</th>
}
@helper FileHeader2Item(bool withSize)
{
    <th style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px;">Дата/время</th>
    <th style="border: 1px solid black;padding-left:5px;padding-right:5px;">Наименование</th>
    <th style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px;">Количество записей</th>
    if (withSize)
    {
        <th style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px;">Размер, KB</th>
    }
}
@helper FileItem(EtlFile file, bool withSize, bool hasRowDiscrepancy)
{
    <td style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px;">
        @file.Timestamp.ToString("dd.MM.yyyy\u00A0HH:mm:ss")
    </td>
    <td style="border: 1px solid black;padding-left:5px;padding-right:5px;">
        @file.Name
    </td>
    <td style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px; @(hasRowDiscrepancy ? "color:red;" : null)">
        @(file.RowCount.HasValue ? file.RowCount.Value.ToString("D") : "-")
    </td>
    if (withSize)
    {
        <td style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px; @(file.SizeExceeded ? "color:red;" : null)">
            @(file.Size.HasValue ? (file.Size.Value / 1024.0).ToString("F1") : "-")
        </td>
    }
}
@helper NoFileItem(bool withSize, bool isDelayed)
{
    if (isDelayed)
    {
        <td colspan="@(withSize ? 4 : 3)" style="text-align:center; color:red;border: 1px solid black;padding-left:5px;padding-right:5px;">
            Превышено время ожидания (@Rapidsoft.VTB24.Reports.Site.Infrastructure.Settings.MaxReplyDelayHours часов)
        </td>
    }
    else
    {
        <td colspan="@(withSize ? 4 : 3)" style="text-align:center;border: 1px solid black;padding-left:5px;padding-right:5px;">
            Отсутствует
        </td>
    }
}
