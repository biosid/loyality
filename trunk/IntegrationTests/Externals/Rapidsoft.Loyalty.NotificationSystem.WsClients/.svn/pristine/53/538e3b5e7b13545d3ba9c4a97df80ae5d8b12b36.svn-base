//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendFeedbackParameters", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "InputParameters")]
    [System.SerializableAttribute()]
    public partial class SendFeedbackParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageAttachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.FeedbackTypes TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageAttachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientEmail {
            get {
                return this.ClientEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientEmailField, value) != true)) {
                    this.ClientEmailField = value;
                    this.RaisePropertyChanged("ClientEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientFullName {
            get {
                return this.ClientFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientFullNameField, value) != true)) {
                    this.ClientFullNameField = value;
                    this.RaisePropertyChanged("ClientFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.FeedbackTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageAttachment", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    [System.SerializableAttribute()]
    public partial class MessageAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ThreadIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ThreadId {
            get {
                return this.ThreadIdField;
            }
            set {
                if ((this.ThreadIdField.Equals(value) != true)) {
                    this.ThreadIdField = value;
                    this.RaisePropertyChanged("ThreadId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedbackTypes", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    public enum FeedbackTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suggestion = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Issue = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBase", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "OutputResults")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackResult))]
    public partial class ResultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultDescription {
            get {
                return this.ResultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDescriptionField, value) != true)) {
                    this.ResultDescriptionField = value;
                    this.RaisePropertyChanged("ResultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendFeedbackResult", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "OutputResults")]
    [System.SerializableAttribute()]
    public partial class SendFeedbackResult : Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.Thread ThreadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.Thread Thread {
            get {
                return this.ThreadField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadField, value) != true)) {
                    this.ThreadField = value;
                    this.RaisePropertyChanged("Thread");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Thread", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    [System.SerializableAttribute()]
    public partial class Thread : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ThreadClientTypes ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstMessageByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstMessageTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageTypes FirstMessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnsweredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastMessageByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastMessageTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageTypes LastMessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessagesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShowSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShowUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ThreadMessage TopicMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ThreadTypes TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnreadMessagesCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientEmail {
            get {
                return this.ClientEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientEmailField, value) != true)) {
                    this.ClientEmailField = value;
                    this.RaisePropertyChanged("ClientEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientFullName {
            get {
                return this.ClientFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientFullNameField, value) != true)) {
                    this.ClientFullNameField = value;
                    this.RaisePropertyChanged("ClientFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ThreadClientTypes ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((this.ClientTypeField.Equals(value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstMessageBy {
            get {
                return this.FirstMessageByField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstMessageByField, value) != true)) {
                    this.FirstMessageByField = value;
                    this.RaisePropertyChanged("FirstMessageBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstMessageTime {
            get {
                return this.FirstMessageTimeField;
            }
            set {
                if ((this.FirstMessageTimeField.Equals(value) != true)) {
                    this.FirstMessageTimeField = value;
                    this.RaisePropertyChanged("FirstMessageTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageTypes FirstMessageType {
            get {
                return this.FirstMessageTypeField;
            }
            set {
                if ((this.FirstMessageTypeField.Equals(value) != true)) {
                    this.FirstMessageTypeField = value;
                    this.RaisePropertyChanged("FirstMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedDate {
            get {
                return this.InsertedDateField;
            }
            set {
                if ((this.InsertedDateField.Equals(value) != true)) {
                    this.InsertedDateField = value;
                    this.RaisePropertyChanged("InsertedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnswered {
            get {
                return this.IsAnsweredField;
            }
            set {
                if ((this.IsAnsweredField.Equals(value) != true)) {
                    this.IsAnsweredField = value;
                    this.RaisePropertyChanged("IsAnswered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastMessageBy {
            get {
                return this.LastMessageByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastMessageByField, value) != true)) {
                    this.LastMessageByField = value;
                    this.RaisePropertyChanged("LastMessageBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastMessageTime {
            get {
                return this.LastMessageTimeField;
            }
            set {
                if ((this.LastMessageTimeField.Equals(value) != true)) {
                    this.LastMessageTimeField = value;
                    this.RaisePropertyChanged("LastMessageTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageTypes LastMessageType {
            get {
                return this.LastMessageTypeField;
            }
            set {
                if ((this.LastMessageTypeField.Equals(value) != true)) {
                    this.LastMessageTypeField = value;
                    this.RaisePropertyChanged("LastMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessagesCount {
            get {
                return this.MessagesCountField;
            }
            set {
                if ((this.MessagesCountField.Equals(value) != true)) {
                    this.MessagesCountField = value;
                    this.RaisePropertyChanged("MessagesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShowSince {
            get {
                return this.ShowSinceField;
            }
            set {
                if ((this.ShowSinceField.Equals(value) != true)) {
                    this.ShowSinceField = value;
                    this.RaisePropertyChanged("ShowSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShowUntil {
            get {
                return this.ShowUntilField;
            }
            set {
                if ((this.ShowUntilField.Equals(value) != true)) {
                    this.ShowUntilField = value;
                    this.RaisePropertyChanged("ShowUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ThreadMessage TopicMessage {
            get {
                return this.TopicMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicMessageField, value) != true)) {
                    this.TopicMessageField = value;
                    this.RaisePropertyChanged("TopicMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.ThreadTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnreadMessagesCount {
            get {
                return this.UnreadMessagesCountField;
            }
            set {
                if ((this.UnreadMessagesCountField.Equals(value) != true)) {
                    this.UnreadMessagesCountField = value;
                    this.RaisePropertyChanged("UnreadMessagesCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadMessage", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    [System.SerializableAttribute()]
    public partial class ThreadMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageAttachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUnreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageTypes MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ThreadIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageAttachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorEmail {
            get {
                return this.AuthorEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorEmailField, value) != true)) {
                    this.AuthorEmailField = value;
                    this.RaisePropertyChanged("AuthorEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorFullName {
            get {
                return this.AuthorFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorFullNameField, value) != true)) {
                    this.AuthorFullNameField = value;
                    this.RaisePropertyChanged("AuthorFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorIdField, value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedDate {
            get {
                return this.InsertedDateField;
            }
            set {
                if ((this.InsertedDateField.Equals(value) != true)) {
                    this.InsertedDateField = value;
                    this.RaisePropertyChanged("InsertedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUnread {
            get {
                return this.IsUnreadField;
            }
            set {
                if ((this.IsUnreadField.Equals(value) != true)) {
                    this.IsUnreadField = value;
                    this.RaisePropertyChanged("IsUnread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.MessageTypes MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ThreadId {
            get {
                return this.ThreadIdField;
            }
            set {
                if ((this.ThreadIdField.Equals(value) != true)) {
                    this.ThreadIdField = value;
                    this.RaisePropertyChanged("ThreadId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadClientTypes", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    public enum ThreadClientTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guest = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Client = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageTypes", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    public enum MessageTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperatorMessage = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientMessage = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuestMessage = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemMessage = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadTypes", Namespace="http://schemas.datacontract.org/2004/07/Rapidsoft.Loyalty.NotificationSystem.API." +
        "Entities")]
    public enum ThreadTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suggestion = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Issue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notification = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientFeedbackService.IClientFeedbackService")]
    public interface IClientFeedbackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupportService/Echo", ReplyAction="http://tempuri.org/ISupportService/EchoResponse")]
        string Echo(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupportService/Echo", ReplyAction="http://tempuri.org/ISupportService/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientFeedbackService/Send", ReplyAction="http://tempuri.org/IClientFeedbackService/SendResponse")]
        Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackResult Send(Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientFeedbackService/Send", ReplyAction="http://tempuri.org/IClientFeedbackService/SendResponse")]
        System.Threading.Tasks.Task<Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackResult> SendAsync(Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackParameters parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientFeedbackServiceChannel : Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.IClientFeedbackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientFeedbackServiceClient : System.ServiceModel.ClientBase<Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.IClientFeedbackService>, Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.IClientFeedbackService {
        
        public ClientFeedbackServiceClient() {
        }
        
        public ClientFeedbackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientFeedbackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientFeedbackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientFeedbackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Echo(string message) {
            return base.Channel.Echo(message);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string message) {
            return base.Channel.EchoAsync(message);
        }
        
        public Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackResult Send(Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackParameters parameters) {
            return base.Channel.Send(parameters);
        }
        
        public System.Threading.Tasks.Task<Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackResult> SendAsync(Rapidsoft.Loyalty.NotificationSystem.WsClients.ClientFeedbackService.SendFeedbackParameters parameters) {
            return base.Channel.SendAsync(parameters);
        }
    }
}
