//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBase", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetMetadataByDomainIdResult))]
    public partial class ResultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultDescription {
            get {
                return this.ResultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDescriptionField, value) != true)) {
                    this.ResultDescriptionField = value;
                    this.RaisePropertyChanged("ResultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleDomainResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    public partial class RuleDomainResult : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain RuleDomainField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain RuleDomain {
            get {
                return this.RuleDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleDomainField, value) != true)) {
                    this.RuleDomainField = value;
                    this.RaisePropertyChanged("RuleDomain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleDomainsResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    public partial class RuleDomainsResult : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain[] RuleDomainsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain[] RuleDomains {
            get {
                return this.RuleDomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleDomainsField, value) != true)) {
                    this.RuleDomainsField = value;
                    this.RaisePropertyChanged("RuleDomains");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    public partial class RuleResult : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule RuleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RulesResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    public partial class RulesResult : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCountToTakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule[] RulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCountToTake {
            get {
                return this.MaxCountToTakeField;
            }
            set {
                if ((this.MaxCountToTakeField.Equals(value) != true)) {
                    this.MaxCountToTakeField = value;
                    this.RaisePropertyChanged("MaxCountToTake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule[] Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RulesField, value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleHistoryResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    public partial class GetRuleHistoryResult : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCountToTakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleHistory[] RuleHistoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCountToTake {
            get {
                return this.MaxCountToTakeField;
            }
            set {
                if ((this.MaxCountToTakeField.Equals(value) != true)) {
                    this.MaxCountToTakeField = value;
                    this.RaisePropertyChanged("MaxCountToTake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleHistory[] RuleHistories {
            get {
                return this.RuleHistoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleHistoriesField, value) != true)) {
                    this.RuleHistoriesField = value;
                    this.RaisePropertyChanged("RuleHistories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMetadataByDomainIdResult", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.OutputR" +
        "esults")]
    [System.SerializableAttribute()]
    public partial class GetMetadataByDomainIdResult : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.EntityMetadata[] EntitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.EntityMetadata[] Entities {
            get {
                return this.EntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitiesField, value) != true)) {
                    this.EntitiesField = value;
                    this.RaisePropertyChanged("Entities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityMetadata", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    [System.SerializableAttribute()]
    public partial class EntityMetadata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Attribute[] AttributesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Attribute[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleDomain", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    [System.SerializableAttribute()]
    public partial class RuleDomain : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefaultBaseAdditionFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefaultBaseMultiplicationFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LimitFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.LimitTypes LimitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StopLimitFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.LimitTypes StopLimitTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefaultBaseAdditionFactor {
            get {
                return this.DefaultBaseAdditionFactorField;
            }
            set {
                if ((this.DefaultBaseAdditionFactorField.Equals(value) != true)) {
                    this.DefaultBaseAdditionFactorField = value;
                    this.RaisePropertyChanged("DefaultBaseAdditionFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefaultBaseMultiplicationFactor {
            get {
                return this.DefaultBaseMultiplicationFactorField;
            }
            set {
                if ((this.DefaultBaseMultiplicationFactorField.Equals(value) != true)) {
                    this.DefaultBaseMultiplicationFactorField = value;
                    this.RaisePropertyChanged("DefaultBaseMultiplicationFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LimitFactor {
            get {
                return this.LimitFactorField;
            }
            set {
                if ((this.LimitFactorField.Equals(value) != true)) {
                    this.LimitFactorField = value;
                    this.RaisePropertyChanged("LimitFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.LimitTypes LimitType {
            get {
                return this.LimitTypeField;
            }
            set {
                if ((this.LimitTypeField.Equals(value) != true)) {
                    this.LimitTypeField = value;
                    this.RaisePropertyChanged("LimitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Metadata {
            get {
                return this.MetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataField, value) != true)) {
                    this.MetadataField = value;
                    this.RaisePropertyChanged("Metadata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StopLimitFactor {
            get {
                return this.StopLimitFactorField;
            }
            set {
                if ((this.StopLimitFactorField.Equals(value) != true)) {
                    this.StopLimitFactorField = value;
                    this.RaisePropertyChanged("StopLimitFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.LimitTypes StopLimitType {
            get {
                return this.StopLimitTypeField;
            }
            set {
                if ((this.StopLimitTypeField.Equals(value) != true)) {
                    this.StopLimitTypeField = value;
                    this.RaisePropertyChanged("StopLimitType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.BaseHistoryEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedDate {
            get {
                return this.InsertedDateField;
            }
            set {
                if ((this.InsertedDateField.Equals(value) != true)) {
                    this.InsertedDateField = value;
                    this.RaisePropertyChanged("InsertedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedUserId {
            get {
                return this.UpdatedUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedUserIdField, value) != true)) {
                    this.UpdatedUserIdField = value;
                    this.RaisePropertyChanged("UpdatedUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseHistoryEntity", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s.History")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleHistory))]
    public partial class BaseHistoryEntity : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.HistoryEvent EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HistoryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.HistoryEvent Event {
            get {
                return this.EventField;
            }
            set {
                if ((this.EventField.Equals(value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HistoryId {
            get {
                return this.HistoryIdField;
            }
            set {
                if ((this.HistoryIdField.Equals(value) != true)) {
                    this.HistoryIdField = value;
                    this.RaisePropertyChanged("HistoryId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleHistory", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s.History")]
    [System.SerializableAttribute()]
    public partial class RuleHistory : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.BaseHistoryEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproveDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ApproveStatus ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionalFactorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExclusiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNotExcludedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PredicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RuleDomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleStatuses StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleTypes TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveDescription {
            get {
                return this.ApproveDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveDescriptionField, value) != true)) {
                    this.ApproveDescriptionField = value;
                    this.RaisePropertyChanged("ApproveDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ApproveStatus Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionalFactors {
            get {
                return this.ConditionalFactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionalFactorsField, value) != true)) {
                    this.ConditionalFactorsField = value;
                    this.RaisePropertyChanged("ConditionalFactors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeFrom {
            get {
                return this.DateTimeFromField;
            }
            set {
                if ((this.DateTimeFromField.Equals(value) != true)) {
                    this.DateTimeFromField = value;
                    this.RaisePropertyChanged("DateTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeTo {
            get {
                return this.DateTimeToField;
            }
            set {
                if ((this.DateTimeToField.Equals(value) != true)) {
                    this.DateTimeToField = value;
                    this.RaisePropertyChanged("DateTimeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExclusive {
            get {
                return this.IsExclusiveField;
            }
            set {
                if ((this.IsExclusiveField.Equals(value) != true)) {
                    this.IsExclusiveField = value;
                    this.RaisePropertyChanged("IsExclusive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNotExcludedBy {
            get {
                return this.IsNotExcludedByField;
            }
            set {
                if ((this.IsNotExcludedByField.Equals(value) != true)) {
                    this.IsNotExcludedByField = value;
                    this.RaisePropertyChanged("IsNotExcludedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Predicate {
            get {
                return this.PredicateField;
            }
            set {
                if ((object.ReferenceEquals(this.PredicateField, value) != true)) {
                    this.PredicateField = value;
                    this.RaisePropertyChanged("Predicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RuleDomainId {
            get {
                return this.RuleDomainIdField;
            }
            set {
                if ((this.RuleDomainIdField.Equals(value) != true)) {
                    this.RuleDomainIdField = value;
                    this.RaisePropertyChanged("RuleDomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleStatuses Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rule", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Rule : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproveDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ApproveStatus ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionalFactorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExclusiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNotExcludedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PredicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RuleDomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleStatuses StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleTypes TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveDescription {
            get {
                return this.ApproveDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveDescriptionField, value) != true)) {
                    this.ApproveDescriptionField = value;
                    this.RaisePropertyChanged("ApproveDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ApproveStatus Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionalFactors {
            get {
                return this.ConditionalFactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionalFactorsField, value) != true)) {
                    this.ConditionalFactorsField = value;
                    this.RaisePropertyChanged("ConditionalFactors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeFrom {
            get {
                return this.DateTimeFromField;
            }
            set {
                if ((this.DateTimeFromField.Equals(value) != true)) {
                    this.DateTimeFromField = value;
                    this.RaisePropertyChanged("DateTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeTo {
            get {
                return this.DateTimeToField;
            }
            set {
                if ((this.DateTimeToField.Equals(value) != true)) {
                    this.DateTimeToField = value;
                    this.RaisePropertyChanged("DateTimeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExclusive {
            get {
                return this.IsExclusiveField;
            }
            set {
                if ((this.IsExclusiveField.Equals(value) != true)) {
                    this.IsExclusiveField = value;
                    this.RaisePropertyChanged("IsExclusive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNotExcludedBy {
            get {
                return this.IsNotExcludedByField;
            }
            set {
                if ((this.IsNotExcludedByField.Equals(value) != true)) {
                    this.IsNotExcludedByField = value;
                    this.RaisePropertyChanged("IsNotExcludedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Predicate {
            get {
                return this.PredicateField;
            }
            set {
                if ((object.ReferenceEquals(this.PredicateField, value) != true)) {
                    this.PredicateField = value;
                    this.RaisePropertyChanged("Predicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RuleDomainId {
            get {
                return this.RuleDomainIdField;
            }
            set {
                if ((this.RuleDomainIdField.Equals(value) != true)) {
                    this.RuleDomainIdField = value;
                    this.RaisePropertyChanged("RuleDomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleStatuses Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LimitTypes", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    public enum LimitTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fixed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryEvent", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s.History")]
    public enum HistoryEvent : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknow = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Create = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApproveStatus", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    public enum ApproveStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotApproved = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Correction = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleStatuses", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    public enum RuleStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotActive = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleTypes", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    public enum RuleTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseMultiplication = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseAddition = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Multiplication = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Addition = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attribute", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Attribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DictionaryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.AttributeTypes TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DictionaryId {
            get {
                return this.DictionaryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DictionaryIdField, value) != true)) {
                    this.DictionaryIdField = value;
                    this.RaisePropertyChanged("DictionaryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.AttributeTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeTypes", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.Entitie" +
        "s")]
    public enum AttributeTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Number = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRulesParameters", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.InputPa" +
        "rameters")]
    [System.SerializableAttribute()]
    public partial class GetRulesParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ApproveStatus[] ApproveStatusesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CalcTotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountSkipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountTakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RuleDomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.SortDirections> SortDirectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.SortProperty> SortPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleStatuses> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleTypes> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ApproveStatus[] ApproveStatuses {
            get {
                return this.ApproveStatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveStatusesField, value) != true)) {
                    this.ApproveStatusesField = value;
                    this.RaisePropertyChanged("ApproveStatuses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CalcTotalCount {
            get {
                return this.CalcTotalCountField;
            }
            set {
                if ((this.CalcTotalCountField.Equals(value) != true)) {
                    this.CalcTotalCountField = value;
                    this.RaisePropertyChanged("CalcTotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountSkip {
            get {
                return this.CountSkipField;
            }
            set {
                if ((this.CountSkipField.Equals(value) != true)) {
                    this.CountSkipField = value;
                    this.RaisePropertyChanged("CountSkip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountTake {
            get {
                return this.CountTakeField;
            }
            set {
                if ((this.CountTakeField.Equals(value) != true)) {
                    this.CountTakeField = value;
                    this.RaisePropertyChanged("CountTake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeFrom {
            get {
                return this.DateTimeFromField;
            }
            set {
                if ((this.DateTimeFromField.Equals(value) != true)) {
                    this.DateTimeFromField = value;
                    this.RaisePropertyChanged("DateTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeTo {
            get {
                return this.DateTimeToField;
            }
            set {
                if ((this.DateTimeToField.Equals(value) != true)) {
                    this.DateTimeToField = value;
                    this.RaisePropertyChanged("DateTimeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUntil {
            get {
                return this.DateTimeUntilField;
            }
            set {
                if ((this.DateTimeUntilField.Equals(value) != true)) {
                    this.DateTimeUntilField = value;
                    this.RaisePropertyChanged("DateTimeUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RuleDomainId {
            get {
                return this.RuleDomainIdField;
            }
            set {
                if ((this.RuleDomainIdField.Equals(value) != true)) {
                    this.RuleDomainIdField = value;
                    this.RaisePropertyChanged("RuleDomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchTerm {
            get {
                return this.SearchTermField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchTermField, value) != true)) {
                    this.SearchTermField = value;
                    this.RaisePropertyChanged("SearchTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.SortDirections> SortDirect {
            get {
                return this.SortDirectField;
            }
            set {
                if ((this.SortDirectField.Equals(value) != true)) {
                    this.SortDirectField = value;
                    this.RaisePropertyChanged("SortDirect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.SortProperty> SortProperty {
            get {
                return this.SortPropertyField;
            }
            set {
                if ((this.SortPropertyField.Equals(value) != true)) {
                    this.SortPropertyField = value;
                    this.RaisePropertyChanged("SortProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleStatuses> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleTypes> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortDirections", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.InputPa" +
        "rameters")]
    public enum SortDirections : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Asc = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desc = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortProperty", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.InputPa" +
        "rameters")]
    public enum SortProperty : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Priority = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTimeTo = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleHistoryParameters", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.InputPa" +
        "rameters")]
    [System.SerializableAttribute()]
    public partial class GetRuleHistoryParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CalcTotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountSkipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountTakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CalcTotalCount {
            get {
                return this.CalcTotalCountField;
            }
            set {
                if ((this.CalcTotalCountField.Equals(value) != true)) {
                    this.CalcTotalCountField = value;
                    this.RaisePropertyChanged("CalcTotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountSkip {
            get {
                return this.CountSkipField;
            }
            set {
                if ((this.CountSkipField.Equals(value) != true)) {
                    this.CountSkipField = value;
                    this.RaisePropertyChanged("CountSkip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountTake {
            get {
                return this.CountTakeField;
            }
            set {
                if ((this.CountTakeField.Equals(value) != true)) {
                    this.CountTakeField = value;
                    this.RaisePropertyChanged("CountTake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Approve", Namespace="http://schemas.datacontract.org/2004/07/RapidSoft.Loaylty.PromoAction.Api.InputPa" +
        "rameters")]
    [System.SerializableAttribute()]
    public partial class Approve : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminMechanicsService.IAdminMechanicsService")]
    public interface IAdminMechanicsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupportService/Echo", ReplyAction="http://tempuri.org/ISupportService/EchoResponse")]
        string Echo(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupportService/Echo", ReplyAction="http://tempuri.org/ISupportService/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetMetadataByDomainId", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetMetadataByDomainIdResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetMetadataByDomainIdResult GetMetadataByDomainId(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetMetadataByDomainId", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetMetadataByDomainIdResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetMetadataByDomainIdResult> GetMetadataByDomainIdAsync(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/SaveRuleDomain", ReplyAction="http://tempuri.org/IAdminMechanicsService/SaveRuleDomainResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult SaveRuleDomain(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain ruleDomain, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/SaveRuleDomain", ReplyAction="http://tempuri.org/IAdminMechanicsService/SaveRuleDomainResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult> SaveRuleDomainAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain ruleDomain, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRuleDomain", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRuleDomainResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult GetRuleDomain(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRuleDomain", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRuleDomainResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult> GetRuleDomainAsync(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetAllRuleDomains", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetAllRuleDomainsResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainsResult GetAllRuleDomains(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetAllRuleDomains", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetAllRuleDomainsResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainsResult> GetAllRuleDomainsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeleteRuleDomainById", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeleteRuleDomainByIdResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeleteRuleDomainById(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeleteRuleDomainById", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeleteRuleDomainByIdResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeleteRuleDomainByIdAsync(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/CreateRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/CreateRuleResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult CreateRule(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/CreateRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/CreateRuleResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult> CreateRuleAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/UpdateRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/UpdateRuleResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult UpdateRule(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/UpdateRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/UpdateRuleResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult> UpdateRuleAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRuleResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult GetRule(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRuleResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult> GetRuleAsync(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRules", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRulesResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult GetRules(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRules", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRulesResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult> GetRulesAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetPromoActions", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetPromoActionsResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult GetPromoActions(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetPromoActions", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetPromoActionsResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult> GetPromoActionsAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeleteRuleById", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeleteRuleByIdResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeleteRuleById(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeleteRuleById", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeleteRuleByIdResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeleteRuleByIdAsync(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeactivateRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeactivateRuleResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeactivateRule(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeactivateRule", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeactivateRuleResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeactivateRuleAsync(long id, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeactivateRules", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeactivateRulesResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeactivateRules(long[] ids, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/DeactivateRules", ReplyAction="http://tempuri.org/IAdminMechanicsService/DeactivateRulesResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeactivateRulesAsync(long[] ids, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRuleHistory", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRuleHistoryResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryResult GetRuleHistory(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/GetRuleHistory", ReplyAction="http://tempuri.org/IAdminMechanicsService/GetRuleHistoryResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryResult> GetRuleHistoryAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/SetRuleApproved", ReplyAction="http://tempuri.org/IAdminMechanicsService/SetRuleApprovedResponse")]
        RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase SetRuleApproved(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Approve[] approves, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminMechanicsService/SetRuleApproved", ReplyAction="http://tempuri.org/IAdminMechanicsService/SetRuleApprovedResponse")]
        System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> SetRuleApprovedAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Approve[] approves, string userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminMechanicsServiceChannel : RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.IAdminMechanicsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminMechanicsServiceClient : System.ServiceModel.ClientBase<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.IAdminMechanicsService>, RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.IAdminMechanicsService {
        
        public AdminMechanicsServiceClient() {
        }
        
        public AdminMechanicsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminMechanicsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminMechanicsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminMechanicsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Echo(string message) {
            return base.Channel.Echo(message);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string message) {
            return base.Channel.EchoAsync(message);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetMetadataByDomainIdResult GetMetadataByDomainId(long id, string userId) {
            return base.Channel.GetMetadataByDomainId(id, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetMetadataByDomainIdResult> GetMetadataByDomainIdAsync(long id, string userId) {
            return base.Channel.GetMetadataByDomainIdAsync(id, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult SaveRuleDomain(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain ruleDomain, string userId) {
            return base.Channel.SaveRuleDomain(ruleDomain, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult> SaveRuleDomainAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomain ruleDomain, string userId) {
            return base.Channel.SaveRuleDomainAsync(ruleDomain, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult GetRuleDomain(long id, string userId) {
            return base.Channel.GetRuleDomain(id, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainResult> GetRuleDomainAsync(long id, string userId) {
            return base.Channel.GetRuleDomainAsync(id, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainsResult GetAllRuleDomains(string userId) {
            return base.Channel.GetAllRuleDomains(userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleDomainsResult> GetAllRuleDomainsAsync(string userId) {
            return base.Channel.GetAllRuleDomainsAsync(userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeleteRuleDomainById(long id, string userId) {
            return base.Channel.DeleteRuleDomainById(id, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeleteRuleDomainByIdAsync(long id, string userId) {
            return base.Channel.DeleteRuleDomainByIdAsync(id, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult CreateRule(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId) {
            return base.Channel.CreateRule(rule, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult> CreateRuleAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId) {
            return base.Channel.CreateRuleAsync(rule, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult UpdateRule(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId) {
            return base.Channel.UpdateRule(rule, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult> UpdateRuleAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Rule rule, string userId) {
            return base.Channel.UpdateRuleAsync(rule, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult GetRule(long id, string userId) {
            return base.Channel.GetRule(id, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RuleResult> GetRuleAsync(long id, string userId) {
            return base.Channel.GetRuleAsync(id, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult GetRules(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters) {
            return base.Channel.GetRules(parameters);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult> GetRulesAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters) {
            return base.Channel.GetRulesAsync(parameters);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult GetPromoActions(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters) {
            return base.Channel.GetPromoActions(parameters);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.RulesResult> GetPromoActionsAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRulesParameters parameters) {
            return base.Channel.GetPromoActionsAsync(parameters);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeleteRuleById(long id, string userId) {
            return base.Channel.DeleteRuleById(id, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeleteRuleByIdAsync(long id, string userId) {
            return base.Channel.DeleteRuleByIdAsync(id, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeactivateRule(long id, string userId) {
            return base.Channel.DeactivateRule(id, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeactivateRuleAsync(long id, string userId) {
            return base.Channel.DeactivateRuleAsync(id, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase DeactivateRules(long[] ids, string userId) {
            return base.Channel.DeactivateRules(ids, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> DeactivateRulesAsync(long[] ids, string userId) {
            return base.Channel.DeactivateRulesAsync(ids, userId);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryResult GetRuleHistory(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryParameters parameters) {
            return base.Channel.GetRuleHistory(parameters);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryResult> GetRuleHistoryAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.GetRuleHistoryParameters parameters) {
            return base.Channel.GetRuleHistoryAsync(parameters);
        }
        
        public RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase SetRuleApproved(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Approve[] approves, string userId) {
            return base.Channel.SetRuleApproved(approves, userId);
        }
        
        public System.Threading.Tasks.Task<RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.ResultBase> SetRuleApprovedAsync(RapidSoft.Loaylty.PromoAction.WsClients.AdminMechanicsService.Approve[] approves, string userId) {
            return base.Channel.SetRuleApprovedAsync(approves, userId);
        }
    }
}
